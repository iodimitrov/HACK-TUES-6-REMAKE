rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  	function valid_create() {
        return !(request.resource.data.keys().hasAll(["verified"]));
    }

    function valid_update() {
        return request.resource.data.verified == resource.data.verified
               || (valid_create()
                  && !(resource.data.keys().hasAll(["verified"])))
    }
    
    function ownsTeam(teamId) {
      return request.auth.token.email in get(/databases/$(database)/documents/teams/$(teamId)).data.projectUsers;
    }
    
    match /users/{userId} {
      allow create, delete: if request.auth.token.firebase.sign_in_provider != 'password' || request.auth.token.email == userId;
    	allow update, read;
    }
    match /users/{userId}/notifications/{notificationId} {
    	allow read;
      allow write;
    }
    match /teams/{teamId} {
    	allow read;
    	allow update: if valid_update();
      allow create;
      allow delete;
    }
    match /tech/{techId} {
    	allow read;
    }
    match /mentors/{mentorId} {
    	allow read;
    }
  }
}